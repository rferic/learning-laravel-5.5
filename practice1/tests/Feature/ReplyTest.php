<?php

namespace Tests\Feature;

use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\DatabaseMigrations;

use Illuminate\Http\UploadedFile;

use Illuminate\Support\Facades\Storage;

use App\Forum;
use App\User;
use App\Post;
use App\Reply;

class ReplyTest extends TestCase
{
	use DatabaseMigrations;

	protected $forum, $user, $post;

	protected function setUp() {
		parent::setUp(); // TODO: Change the autogenerated stub
		$this->forum = factory(Forum::class)->create();
		$this->user = factory(User::class)->create();
		$this->post = factory(Post::class)->create([
			"user_id" => $this->user->id,
			"forum_id"=> $this->forum->id
		]);
	}

	public function testAnyCanSeeReplies ()
	{
		$this->withExceptionHandling();

		$reply = factory(Reply::class)->create([
			'user_id' => $this->user->id,
			'post_id' => $this->post->id
		]);

		$response = $this->get('/posts/' . $this->post->slug);

		// TODO Check if user can be see the created object
		$response->assertSee($reply->reply);
	}

	public function testUserLoggedCanSubmitReply ()
	{
		$this->withExceptionHandling();
		$this->signIn();

		$reply = factory(Reply::class)->make([
			'user_id' => $this->user->id,
			'post_id' => $this->post->id,
			'title' => 'asdasdasdsadasdsasadasdsad',
			'reply' => null
		]);

		$response = $this->post('/replies', $reply->toArray());

        $response->assertSessionHasErrors('reply');

		/**********************************************************/

		$reply->reply = 'Test reply phpunit';

		$response = $this->post('/replies', $reply->toArray(), ['HTTP_REFERER' => '/posts/' . $this->post->slug]);

		$response
			->assertStatus(302)
			->assertSessionHas('message', ['class' => 'success', 'text' => __('Reply has been published')]);
	}

	public function testUserLoggedCanDestroyReply ()
	{
		$this->withExceptionHandling();

		$reply = factory(Reply::class)->create([
			'user_id' => $this->user->id,
			'post_id' => $this->post->id
		]);
		
		$this->signIn();

		$response = $this->delete('/replies', $reply->toArray());

		$response
			->assertStatus(302)
			->assertSessionHas('message', ['class' => 'success', 'text' => __('Reply has been removed')]);
	}
}
